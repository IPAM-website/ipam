services:
  db:
    ports:
     - "127.0.0.1:5432:5432"
    image: "postgres:17-alpine"
    container_name: "db"
    env_file:
      - .env
    volumes:
      - postgresql-data:/var/lib/postgresql/data/
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./logs:/var/log/postgresql
    command:
      - "postgres"
      - "-c"
      - "logging_collector=on"
      - "-c"
      - "log_directory=/var/log/postgresql"
      - "-c"
      - "log_filename=postgresql.log"
      - "-c"
      - "log_statement=all"
      - "-c"
      - "log_min_duration_statement=0"
      - "-c"
      - "log_destination=stderr"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - qwik-net

  backup:
    image: "postgres:17-alpine"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./backups:/backups
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "while true; do
        PGPASSWORD=$$POSTGRES_PASSWORD pg_dump -h db -U $$POSTGRES_USER -Fc $$POSTGRES_DB > /backups/backup_$$(date +%Y-%m-%d-%H-%M-%S).dump &&
        echo 'Backup eseguito: ' $$(date +%Y-%m-%d_%H:%M:%S) &&
        ls -1 /backups/*.dump | head -n -7 | xargs rm -f;
        sleep 86400;
      done"
    networks:
      - qwik-net

  # app:
  #   container_name: "app"
  #   build: .
  #   env_file:
  #     - .env
  #   depends_on:
  #     - db
  #   ports:
  #     - "8080:3000"  # Qwik frontend
  #   networks:
  #     - qwik-net

  # sse:
  #   container_name: "sse-server"
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.sse
  #   ports:
  #     - "3010:3010"  # SSE server
  #   depends_on:
  #     - db
  #   networks:
  #     - qwik-net
  #   env_file:
  #     - .env

volumes:
  postgresql-data:

networks:
  qwik-net:
    driver: bridge
